# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
# on:
#   push:
#     tags:
#       - 'v*'
on:
  push:
    branches:
      - main

env:
  flutter_version: "3.0.5"
  java_version: "12.x"

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./motamot

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}

      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: ${{ runner.tool_cache }}/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta' or 'master'
          cache: true
          cache-key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_version }} # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64

      - name: Flutter version
        run: flutter --version
      

      - name: Load dependencies
        run: flutter pub get
      
      # Bundle app
      - name: Bundle App
        run: flutter build appbundle

      - uses: ilharp/sign-android-release@v1
        name: Sign app
        # ID used to access action output
        id: sign_app
        with:
          releaseDir: ./motamot/build/app/outputs/bundle/release
          signingKey: ${{ secrets.SIGN_SIGNING_KEY }}
          keyAlias: ${{ secrets.SIGN_ALIAS }}
          keyStorePassword: ${{ secrets.SIGN_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGN_KEY_PASSWORD }}
          buildToolsVersion: 30.0.2
        # env:
          # override default build-tools version (29.0.3) -- optional
          # BUILD_TOOLS_VERSION: "30.0.2"

      # Example use of `signedReleaseFile` output -- not needed
      - uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      # - uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ GOOGLE_SERVICE_ACCOUNT_JSON }}
      #     packageName: com.muy.motamot
      #     releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
      #     # track: production
      #     track: internal
      #     status: inProgress
      #     inAppUpdatePriority: 2
      #     whatsNewDirectory: distribution/whatsnew
      #     mappingFile: build/app/outputs/mapping/release/mapping.txt
